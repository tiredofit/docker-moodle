#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service
SERVICE_NAME="moodle"

cat <<EOF

****************************************************************************************
*                                                                                      *
*                    END OF LIFE NOTICE AUGUST 18, 2025                                *
*                               tiredofit/moodle                                       *
*                                                                                      *
* This image is no longer maintained as of and will not receive updates.               *
*                                                                                      *
* A successor image is available at:                                                   *
*                                                                                      *
* Repository | Documentation:                                                          *
*   - https://github.com/nfrastack/container-moodle                                    *
*                                                                                      *
* Image Registries:                                                                    *
*   - https://hub.docker.com/r/nfrastack/moodle                                        *
*   - https://github.com/nfrastack/container-moodle/pkgs/container/container-moodle    *
*                                                                                      *
* Please visit https://nfrastack.com for more information.                             *
*                                                                                      *
****************************************************************************************

EOF

sleep 15


db_ready mariadb

echo "*/${CRON_PERIOD} * * * * TZ=\${TIMEZONE} php \${NGINX_WEBROOT}/admin/cli/cron.php >/dev/null 2>&1" > /assets/cron/moodle

if [ ! -d "${DATA_PATH}" ] ; then
    mkdir -p "${DATA_PATH}"
    chown -R "${NGINX_USER}":"${NGINX_GROUP}" "${DATA_PATH}"
fi

transform_file_var \
                    ADMIN_EMAIL \
                    ADMIN_PASS \
                    ADMIN_USER \
                    DB_HOST \
                    DB_NAME \
                    DB_PASS \
                    DB_PORT \
                    DB_USER

if [ ! -f "${NGINX_WEBROOT}"/index.php ] ; then
    print_info "Detecting New Install. Downloading Moodle.."
    sanity_var ADMIN_USER "Administrative User"
    sanity_var ADMIN_EMAIL "Administrative Email"
    sanity_var ADMIN_PASS "Administrative Password"
    sanity_var SITE_URL "Site URL"
    sanity_var SITE_NAME "Site Full Name"
    sanity_var SITE_SHORT_NAME "Site Short Name"
    mkdir -p "${NGINX_WEBROOT}"

    MOODLE_VERSION_TMP=${MOODLE_VERSION:0:4}
    curl -sSL https://download.moodle.org/download.php/direct/stable${MOODLE_VERSION_TMP//./}/moodle-${MOODLE_VERSION}.tgz | tar xfz - --strip 1 -C "${NGINX_WEBROOT}"
    chown -R "${NGINX_USER}":"${NGINX_GROUP}" "${NGINX_WEBROOT}"
    cd "${NGINX_WEBROOT}"/admin/cli
    print_info "Installing Moodle ${MOODLE_VERSION}"
    sudo -u "${NGINX_USER}" TZ=${TIMEZONE} php install.php \
                                          --adminuser=${ADMIN_USER} \
                                          --adminemail=${ADMIN_EMAIL} \
                                          --adminpass=${ADMIN_PASS} \
                                          --agree-license \
                                          --dataroot=${DATA_PATH} \
                                          --dbhost=${DB_HOST} \
                                          --dbname=${DB_NAME} \
                                          --dbuser=${DB_USER} \
                                          --dbpass=${DB_PASS} \
                                          --dbport=${DB_PORT} \
                                          --dbtype=mariadb \
                                          --fullname="${SITE_NAME}" \
                                          --lang=${LANGUAGE} \
                                          --non-interactive \
                                          --shortname="${SITE_SHORT_NAME}" \
                                          --wwwroot=${SITE_URL}

    if var_true "${ENABLE_REVERSE_PROXY}" ; then
        print_notice "Adding SSL Reverse Proxy Information"
        sudo -u "${NGINX_USER}" sed -i "/wwwroot/a \$CFG->sslproxy=1;" "${NGINX_WEBROOT}"/config.php
    fi
    chown -R "${NGINX_USER}":"${NGINX_GROUP}" "${NGINX_WEBROOT}"
    chmod -R 0755 "${NGINX_WEBROOT}"
fi

### Auto Upgrade functionality
if [ ! -f "${DATA_PATH}"/.moodle-version ]; then
    echo "${MOODLE_VERSION} first installed on $(date)" >> "${DATA_PATH}"/.moodle-version
fi

if var_true "${ENABLE_AUTO_UPDATE}" ; then
    if [ "${MOODLE_VERSION}" != "$(head -n 1 ${DATA_PATH}/.moodle-version | awk '{print $1}')" ] ; then
        print_warn "Detected in place Freescout version $(head -n 1 ${DATA_PATH}/.moodle-version | awk '{print $1}') - Upgrading to ${MOODLE_VERSION}"
        MOODLE_VERSION_TMP="${MOODLE_VERSION:0:3}"
        silent curl https://download.moodle.org/download.php/direct/stable${MOODLE_VERSION_TMP//./}/moodle-${MOODLE_VERSION}.tgz | tar xfz - --strip 1 -C "${NGINX_WEBROOT}"
        chown -R "${NGINX_USER}":"${NGINX_GROUP}" "${NGINX_WEBROOT}"
        cd "${NGINX_WEBROOT}"/admin/cli
        silent sudo -u "${NGINX_USER}" TZ=${TIMEZONE} php upgrade.php --non-interactive
        UPGRADE=TRUE
        sed -i --follow-symlinks "1 i\
${MOODLE_VERSION} upgraded on $(date)" "${DATA_PATH}"/.moodle-version
    fi
fi

chown "${NGINX_USER}":"${NGINX_GROUP}" "${DATA_PATH}"
chown -R "${NGINX_USER}":"${NGINX_GROUP}" "${NGINX_WEBROOT}"
chmod -R 0755 "${NGINX_WEBROOT}"

### Add alias for running occ
cat >>/root/.bashrc <<EOF
function moosh() {
      export oldpwd="\$(pwd)"
      cd /opt/moosh
      sudo -u ${NGINX_USER} php moosh.php --moodle-path=${NGINX_WEBROOT} "\$@"
      cd "\${oldpwd}"
}
EOF

liftoff
